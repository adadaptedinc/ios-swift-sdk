name: iOS starter workflow

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          default=$(echo $scheme_list | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo $default | cat >default
          echo Using default scheme: $default
          
      - name: Version Script
        run: |
          echo "----"
          echo "Info.plist for target: ${PRODUCT_SETTINGS_PATH}"

          buildNum=$(/usr/libexec/Plistbuddy -c "Print Bundle version" "${PRODUCT_SETTINGS_PATH}")
          echo "Current build #: $buildNum"

          if [ -z "$buildNum" ]; then
          echo "No build number found in $PRODUCT_SETTINGS_PATH"
          exit 2
          fi

          buildNum=$(expr $buildNum + 1)
          echo "Build # incremented to: $buildNum"
          /usr/libexec/PlistBuddy -c "Set :Bundle version $buildNum" "$PRODUCT_SETTINGS_PATH"
          echo "----"
          exit 0 
          
      - name: Build
        env:
          scheme: SwiftExampleApp
          platform: ${{ 'iOS Simulator' }}
        run: |
          # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
          device=`xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//"`
          xcodebuild build-for-testing -scheme "$scheme" -destination "platform=$platform,name=$device"
